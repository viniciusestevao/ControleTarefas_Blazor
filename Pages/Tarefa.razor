@page "/tarefa/{parIdTarefa}"
@inject ControleTarefas.Data.ITarefaService TarefaService
@inject NavigationManager Navigation
@inject ILogger<Tarefa> Logger
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JS

<h1>Editar Tarefa</h1>
<br />

<EditForm Model="tarefa" OnSubmit="@SubmitForm">
    <div class="form-group">
        <label>Título</label>
        <InputText id="ds_Titulo" class="form-control" name="ds_Titulo" @bind-Value="tarefa.ds_Titulo"> </InputText>      
    </div>
    <br />
    <div class="form-group">
        <label>Descrição</label>
        <InputText id="ds_Descricao" class="form-control" name="ds_Descricao" @bind-Value="tarefa.ds_Descricao"> </InputText>      
    </div>
    <br />
    <div class="form-group">
        <label>Data Tarefa</label><br />  
        <InputDate @bind-Value="tarefa.dt_Tarefa" />
    </div>
    <br />
    <div class="form-group">
        <label>Hora Início</label>
        <InputText id="hr_Inicio" class="form-control" name="hr_Inicio" @bind-Value="tarefa.hr_Inicio"> </InputText>      
    </div>
    <br />
    <div class="form-group">
        <label>Hora Fim</label>
        <InputText id="hr_Fim" class="form-control" name="hr_Fim" @bind-Value="tarefa.hr_Fim"> </InputText>      
    </div>
    <br />
    <div class="form-group">
        <label>Prioridade</label> <br />
        <InputRadioGroup @bind-Value="tarefa.cd_Prioridade">
            @foreach (var option in opcoesPrioridade)
            {
                <InputRadio Value="option" /> @option <br />
            }
        </InputRadioGroup>
    </div>
    <br />
    <div class="form-group">
        <label>Finalizada ?</label> <br />
        <InputRadioGroup @bind-Value="tarefa.tp_Finalizada">
            @foreach (var option in opcoesFinalizada)
            {
                <InputRadio Value="option" /> @option <br />
            }
        </InputRadioGroup>    
    </div>
    <br /><button type="submit" class="btn btn-success">Gravar</button>
</EditForm>



@code {
    [Parameter]
    public string parIdTarefa { get; set; }

    private ControleTarefas.Data.Tarefa tarefa { get; set; }

    private List<string> opcoesPrioridade = new List<string> { "Baixa", "Média", "Alta" } ;
    private List<string> opcoesFinalizada = new List<string> { "Não", "Sim" } ;


    protected override void OnInitialized()
    {
        if (parIdTarefa == "0")
        {
            tarefa = new Data.Tarefa();
            tarefa.Id_Tarefa = 0;
            tarefa.dt_Tarefa = DateTime.Now;
            tarefa.cd_Prioridade = "Média";
            tarefa.cd_Prioridade = "Não";
        }
        else
        {
            tarefa = TarefaService.GetTarefa(Convert.ToSByte(parIdTarefa));
        }
    }

    private void SubmitForm()
    {
        string msg;
        msg = TarefaService.GravaTarefa(tarefa);
        if (msg != "")
        {
          //  JS.InvokeAsync<string>("displayTickerAlert2", msg, "Alerta");
        }
        else
        {
           Navigation.NavigateTo("tarefas");
        }
    }

}
